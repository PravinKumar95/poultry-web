/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const authSignupLazyImport = createFileRoute('/(auth)/signup')()
const authSigninLazyImport = createFileRoute('/(auth)/signin')()
const appDashboardLazyImport = createFileRoute('/(app)/dashboard')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const authSignupLazyRoute = authSignupLazyImport
  .update({
    id: '/(auth)/signup',
    path: '/signup',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/signup.lazy').then((d) => d.Route))

const authSigninLazyRoute = authSigninLazyImport
  .update({
    id: '/(auth)/signin',
    path: '/signin',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/signin.lazy').then((d) => d.Route))

const appDashboardLazyRoute = appDashboardLazyImport
  .update({
    id: '/(app)/dashboard',
    path: '/dashboard',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(app)/dashboard.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/(app)/dashboard': {
      id: '/(app)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof appDashboardLazyRoute
  '/signin': typeof authSigninLazyRoute
  '/signup': typeof authSignupLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof appDashboardLazyRoute
  '/signin': typeof authSigninLazyRoute
  '/signup': typeof authSignupLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/(app)/dashboard': typeof appDashboardLazyRoute
  '/(auth)/signin': typeof authSigninLazyRoute
  '/(auth)/signup': typeof authSignupLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/signin' | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/signin' | '/signup'
  id:
    | '__root__'
    | '/'
    | '/(app)/dashboard'
    | '/(auth)/signin'
    | '/(auth)/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  appDashboardLazyRoute: typeof appDashboardLazyRoute
  authSigninLazyRoute: typeof authSigninLazyRoute
  authSignupLazyRoute: typeof authSignupLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  appDashboardLazyRoute: appDashboardLazyRoute,
  authSigninLazyRoute: authSigninLazyRoute,
  authSignupLazyRoute: authSignupLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)/dashboard",
        "/(auth)/signin",
        "/(auth)/signup"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/(app)/dashboard": {
      "filePath": "(app)/dashboard.lazy.tsx"
    },
    "/(auth)/signin": {
      "filePath": "(auth)/signin.lazy.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
