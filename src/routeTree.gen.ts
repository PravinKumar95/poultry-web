/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as appAuthImport } from './routes/(app)/_auth'

// Create Virtual Routes

const appImport = createFileRoute('/(app)')()
const IndexLazyImport = createFileRoute('/')()
const authSignupLazyImport = createFileRoute('/(auth)/signup')()
const authSigninLazyImport = createFileRoute('/(auth)/signin')()
const appAuthDashboardLazyImport = createFileRoute('/(app)/_auth/dashboard')()
const appAuthFeedMillMaterialPurchaseLazyImport = createFileRoute(
  '/(app)/_auth/feed-mill/material-purchase',
)()

// Create/Update Routes

const appRoute = appImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const authSignupLazyRoute = authSignupLazyImport
  .update({
    id: '/(auth)/signup',
    path: '/signup',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/signup.lazy').then((d) => d.Route))

const authSigninLazyRoute = authSigninLazyImport
  .update({
    id: '/(auth)/signin',
    path: '/signin',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/signin.lazy').then((d) => d.Route))

const appAuthRoute = appAuthImport.update({
  id: '/_auth',
  getParentRoute: () => appRoute,
} as any)

const appAuthDashboardLazyRoute = appAuthDashboardLazyImport
  .update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => appAuthRoute,
  } as any)
  .lazy(() =>
    import('./routes/(app)/_auth/dashboard.lazy').then((d) => d.Route),
  )

const appAuthFeedMillMaterialPurchaseLazyRoute =
  appAuthFeedMillMaterialPurchaseLazyImport
    .update({
      id: '/feed-mill/material-purchase',
      path: '/feed-mill/material-purchase',
      getParentRoute: () => appAuthRoute,
    } as any)
    .lazy(() =>
      import('./routes/(app)/_auth/feed-mill/material-purchase.lazy').then(
        (d) => d.Route,
      ),
    )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_auth': {
      id: '/(app)/_auth'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appAuthImport
      parentRoute: typeof appRoute
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_auth/dashboard': {
      id: '/(app)/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appAuthDashboardLazyImport
      parentRoute: typeof appAuthImport
    }
    '/(app)/_auth/feed-mill/material-purchase': {
      id: '/(app)/_auth/feed-mill/material-purchase'
      path: '/feed-mill/material-purchase'
      fullPath: '/feed-mill/material-purchase'
      preLoaderRoute: typeof appAuthFeedMillMaterialPurchaseLazyImport
      parentRoute: typeof appAuthImport
    }
  }
}

// Create and export the route tree

interface appAuthRouteChildren {
  appAuthDashboardLazyRoute: typeof appAuthDashboardLazyRoute
  appAuthFeedMillMaterialPurchaseLazyRoute: typeof appAuthFeedMillMaterialPurchaseLazyRoute
}

const appAuthRouteChildren: appAuthRouteChildren = {
  appAuthDashboardLazyRoute: appAuthDashboardLazyRoute,
  appAuthFeedMillMaterialPurchaseLazyRoute:
    appAuthFeedMillMaterialPurchaseLazyRoute,
}

const appAuthRouteWithChildren =
  appAuthRoute._addFileChildren(appAuthRouteChildren)

interface appRouteChildren {
  appAuthRoute: typeof appAuthRouteWithChildren
}

const appRouteChildren: appRouteChildren = {
  appAuthRoute: appAuthRouteWithChildren,
}

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof appAuthRouteWithChildren
  '/signin': typeof authSigninLazyRoute
  '/signup': typeof authSignupLazyRoute
  '/dashboard': typeof appAuthDashboardLazyRoute
  '/feed-mill/material-purchase': typeof appAuthFeedMillMaterialPurchaseLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof appAuthRouteWithChildren
  '/signin': typeof authSigninLazyRoute
  '/signup': typeof authSignupLazyRoute
  '/dashboard': typeof appAuthDashboardLazyRoute
  '/feed-mill/material-purchase': typeof appAuthFeedMillMaterialPurchaseLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/(app)': typeof appRouteWithChildren
  '/(app)/_auth': typeof appAuthRouteWithChildren
  '/(auth)/signin': typeof authSigninLazyRoute
  '/(auth)/signup': typeof authSignupLazyRoute
  '/(app)/_auth/dashboard': typeof appAuthDashboardLazyRoute
  '/(app)/_auth/feed-mill/material-purchase': typeof appAuthFeedMillMaterialPurchaseLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/signup'
    | '/dashboard'
    | '/feed-mill/material-purchase'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signup'
    | '/dashboard'
    | '/feed-mill/material-purchase'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/_auth'
    | '/(auth)/signin'
    | '/(auth)/signup'
    | '/(app)/_auth/dashboard'
    | '/(app)/_auth/feed-mill/material-purchase'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  appRoute: typeof appRouteWithChildren
  authSigninLazyRoute: typeof authSigninLazyRoute
  authSignupLazyRoute: typeof authSignupLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  appRoute: appRouteWithChildren,
  authSigninLazyRoute: authSigninLazyRoute,
  authSignupLazyRoute: authSignupLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)",
        "/(auth)/signin",
        "/(auth)/signup"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/(app)": {
      "filePath": "(app)",
      "children": [
        "/(app)/_auth"
      ]
    },
    "/(app)/_auth": {
      "filePath": "(app)/_auth.tsx",
      "parent": "/(app)",
      "children": [
        "/(app)/_auth/dashboard",
        "/(app)/_auth/feed-mill/material-purchase"
      ]
    },
    "/(auth)/signin": {
      "filePath": "(auth)/signin.lazy.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.lazy.tsx"
    },
    "/(app)/_auth/dashboard": {
      "filePath": "(app)/_auth/dashboard.lazy.tsx",
      "parent": "/(app)/_auth"
    },
    "/(app)/_auth/feed-mill/material-purchase": {
      "filePath": "(app)/_auth/feed-mill/material-purchase.lazy.tsx",
      "parent": "/(app)/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
